{"remainingRequest":"/Users/luola/Desktop/git项目/church/node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js??vue-loader-options!/Users/luola/Desktop/git项目/church/src/views/Reg.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luola/Desktop/git项目/church/src/views/Reg.vue","mtime":1595932337674},{"path":"/Users/luola/Desktop/git项目/church/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luola/Desktop/git项目/church/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luola/Desktop/git项目/church/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luola/Desktop/git项目/church/node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n   getData\n } from \"@api/public\";\n export default {\n   name: \"Reg\",\n   data() {\n     return {\n       form: {\n         name: \"\",\n         address: \"\",\n         region: \"\",\n         data: \"\",\n         desc: \"\"\n       },\n       rules: {\n         name: [{\n             required: true,\n             message: '请输入活动名称',\n             trigger: 'blur'\n           },\n           {\n             min: 3,\n             max: 5,\n             message: '长度在 3 到 5 个字符',\n             trigger: 'blur'\n           }\n         ],\n         address: [{\n           required: true,\n           message: '请输入地址',\n           trigger: 'blur'\n         }],\n         region: [{\n           required: true,\n           message: '请选择活动区域',\n           trigger: 'change'\n         }],\n         data: [{\n           type: 'date',\n           required: true,\n           message: '请选择日期',\n           trigger: 'change'\n         }],\n         desc: [{\n           required: true,\n           message: '请填写活动形式',\n           trigger: 'blur'\n         }]\n       }\n     };\n   },\n   methods: {\n     onSubmit(formName) {\n       this.$refs[formName].validate((valid) => {\n         if (valid) {\n           // 校验通过～formParams为填写的信息;\n           let formParams=this.form;\n           let params = {\n             \"jsonorder\": {\n               \"token\": \"3456dfklj3443ldsfd435\",\n               \"objectName\": \"dictionary\",\n               \"functionName\": \"insert\",\n               \"data\": formParams,\n\n             }\n           };\n           //getArticleBanner这是接口地址，参数params\n           getData(params)\n             .then(res => {\n               if (res.status == 200) {\n                 this.$message({\n                   message: '恭喜你～，创建成功',\n                   type: 'success'\n                 });\n               } else {\n                 \n               }\n             })\n             .catch(function (error) {\n              this.$message.error('Oops~，网络错误了，请刷新重试～');\n             });\n         } else {\n           console.log('error submit!!');\n           return false;\n         }\n       });\n     }\n   }\n };\n",{"version":3,"sources":["Reg.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reg.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"form-page\">\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"100px\" class=\"demo-ruleForm\">\n      <el-form-item label=\"名称\" prop=\"name\">\n        <el-input v-model=\"form.name\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"活动地址\" prop=\"address\">\n        <el-input v-model=\"form.address\" clearable></el-input>\n      </el-form-item>\n      <el-form-item label=\"活动区域\" prop=\"region\">\n        <el-select v-model=\"form.region\" placeholder=\"请选择活动区域\">\n          <el-option label=\"北京\" value=\"beijing\"></el-option>\n          <el-option label=\"郑州\" value=\"zhengzhou\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"活动时间\" prop=\"data\">\n        <el-date-picker v-model=\"form.data\" type=\"date\" placeholder=\"选择日期\"></el-date-picker>\n      </el-form-item>\n      <el-form-item label=\"活动形式\" prop=\"desc\">\n        <el-input type=\"textarea\" v-model=\"form.desc\" placeholder=\"填写描述\"></el-input>\n      </el-form-item>\n\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"onSubmit('form')\">立即创建</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n\n<script>\n import {\n    getData\n  } from \"@api/public\";\n  export default {\n    name: \"Reg\",\n    data() {\n      return {\n        form: {\n          name: \"\",\n          address: \"\",\n          region: \"\",\n          data: \"\",\n          desc: \"\"\n        },\n        rules: {\n          name: [{\n              required: true,\n              message: '请输入活动名称',\n              trigger: 'blur'\n            },\n            {\n              min: 3,\n              max: 5,\n              message: '长度在 3 到 5 个字符',\n              trigger: 'blur'\n            }\n          ],\n          address: [{\n            required: true,\n            message: '请输入地址',\n            trigger: 'blur'\n          }],\n          region: [{\n            required: true,\n            message: '请选择活动区域',\n            trigger: 'change'\n          }],\n          data: [{\n            type: 'date',\n            required: true,\n            message: '请选择日期',\n            trigger: 'change'\n          }],\n          desc: [{\n            required: true,\n            message: '请填写活动形式',\n            trigger: 'blur'\n          }]\n        }\n      };\n    },\n    methods: {\n      onSubmit(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            // 校验通过～formParams为填写的信息;\n            let formParams=this.form;\n            let params = {\n              \"jsonorder\": {\n                \"token\": \"3456dfklj3443ldsfd435\",\n                \"objectName\": \"dictionary\",\n                \"functionName\": \"insert\",\n                \"data\": formParams,\n\n              }\n            };\n            //getArticleBanner这是接口地址，参数params\n            getData(params)\n              .then(res => {\n                if (res.status == 200) {\n                  this.$message({\n                    message: '恭喜你～，创建成功',\n                    type: 'success'\n                  });\n                } else {\n                  \n                }\n              })\n              .catch(function (error) {\n               this.$message.error('Oops~，网络错误了，请刷新重试～');\n              });\n          } else {\n            console.log('error submit!!');\n            return false;\n          }\n        });\n      }\n    }\n  };\n</script>\n\n<style scoped>\n  .form-page {\n    background: #fff;\n    max-width: 10.8rem;\n    margin: 1.2rem auto;\n    padding: 0.2rem;\n  }\n</style>"]}]}