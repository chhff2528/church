{"remainingRequest":"/Users/luola/Desktop/git项目/church/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!/Users/luola/Desktop/git项目/church/src/utils/store/cookie.js","dependencies":[{"path":"/Users/luola/Desktop/git项目/church/src/utils/store/cookie.js","mtime":1585193978000},{"path":"/Users/luola/Desktop/git项目/church/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luola/Desktop/git项目/church/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport { trim, isType } from \"@utils\";\nvar doc = window.document;\n\nfunction get(key) {\n  if (!key || !_has(key)) {\n    return null;\n  }\n\n  var regexpStr = \"(?:^|.*;\\\\s*)\" + escape(key).replace(/[-.+*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\";\n  return JSON.parse(unescape(doc.cookie.replace(new RegExp(regexpStr), \"$1\")));\n}\n\nfunction all() {\n  var cookies = doc.cookie.split(/; ?/g),\n      data = {};\n\n  for (var i = cookies.length - 1; i >= 0; i--) {\n    if (!trim(cookies[i])) {\n      continue;\n    }\n\n    var kvp = cookies[i].split(\"=\");\n    var key = unescape(kvp[0]);\n    data[key] = unescape(kvp[1]);\n  }\n\n  return data;\n}\n\nfunction set(key, data, time) {\n  if (!key) {\n    return;\n  }\n\n  var expires = \"Tue, 19 Jan 2038 03:14:07 GMT\";\n\n  if (time) {\n    var date;\n\n    if (isType(time, \"Date\")) {\n      date = time;\n    } else {\n      date = new Date();\n      date.setTime(date.getTime() + time * 60000);\n    }\n\n    expires = date.toGMTString();\n  }\n\n  data = JSON.stringify(data);\n  doc.cookie = escape(key) + \"=\" + escape(data) + \"; expires=\" + expires + \"; path=/\";\n}\n\nfunction remove(key) {\n  if (!key || !_has(key)) {\n    return;\n  }\n\n  doc.cookie = escape(key) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n}\n\nfunction clearAll() {\n  Object.keys(all()).forEach(function (key) {\n    remove(key);\n  });\n}\n\nfunction _has(key) {\n  return new RegExp(\"(?:^|;\\\\s*)\" + escape(key).replace(/[-.+*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\").test(doc.cookie);\n}\n\nexport default {\n  get: get,\n  all: all,\n  set: set,\n  remove: remove,\n  clearAll: clearAll,\n  has: _has\n};",{"version":3,"sources":["/Users/luola/Desktop/git项目/church/src/utils/store/cookie.js"],"names":["trim","isType","doc","window","document","get","key","_has","regexpStr","escape","replace","JSON","parse","unescape","cookie","RegExp","all","cookies","split","data","i","length","kvp","set","time","expires","date","Date","setTime","getTime","toGMTString","stringify","remove","clearAll","Object","keys","forEach","test","has"],"mappings":"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","sourcesContent":["import { trim, isType } from \"@utils\";\r\n\r\nconst doc = window.document;\r\n\r\nfunction get(key) {\r\n  if (!key || !_has(key)) {\r\n    return null;\r\n  }\r\n  let regexpStr =\r\n    \"(?:^|.*;\\\\s*)\" +\r\n    escape(key).replace(/[-.+*]/g, \"\\\\$&\") +\r\n    \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\";\r\n  return JSON.parse(unescape(doc.cookie.replace(new RegExp(regexpStr), \"$1\")));\r\n}\r\n\r\nfunction all() {\r\n  let cookies = doc.cookie.split(/; ?/g),\r\n    data = {};\r\n  for (let i = cookies.length - 1; i >= 0; i--) {\r\n    if (!trim(cookies[i])) {\r\n      continue;\r\n    }\r\n    let kvp = cookies[i].split(\"=\");\r\n    let key = unescape(kvp[0]);\r\n    data[key] = unescape(kvp[1]);\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction set(key, data, time) {\r\n  if (!key) {\r\n    return;\r\n  }\r\n  let expires = \"Tue, 19 Jan 2038 03:14:07 GMT\";\r\n  if (time) {\r\n    let date;\r\n    if (isType(time, \"Date\")) {\r\n      date = time;\r\n    } else {\r\n      date = new Date();\r\n      date.setTime(date.getTime() + time * 60000);\r\n    }\r\n    expires = date.toGMTString();\r\n  }\r\n\r\n  data = JSON.stringify(data);\r\n  doc.cookie =\r\n    escape(key) + \"=\" + escape(data) + \"; expires=\" + expires + \"; path=/\";\r\n}\r\n\r\nfunction remove(key) {\r\n  if (!key || !_has(key)) {\r\n    return;\r\n  }\r\n  doc.cookie = escape(key) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\r\n}\r\n\r\nfunction clearAll() {\r\n  Object.keys(all()).forEach(function(key) {\r\n    remove(key);\r\n  });\r\n}\r\n\r\nfunction _has(key) {\r\n  return new RegExp(\r\n    \"(?:^|;\\\\s*)\" + escape(key).replace(/[-.+*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\"\r\n  ).test(doc.cookie);\r\n}\r\n\r\nexport default {\r\n  get,\r\n  all,\r\n  set,\r\n  remove,\r\n  clearAll,\r\n  has: _has\r\n};\r\n"]}]}